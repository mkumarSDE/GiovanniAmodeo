---
---

<section id="key-moments" class="py-16 md:py-20 bg-white w-full">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 w-full">
    <div class="text-center mb-12 md:mb-16">
      <h3 class="text-2xl sm:text-3xl md:text-4xl font-bold text-gray-900 mb-4 md:mb-6 bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
        Key Moments
      </h3>
      <p class="text-lg sm:text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed font-medium px-4">
        Milestones from the World of Capital Markets & Strategic Insights
      </p>
    </div>

    <!-- Wheel Carousel Container -->
    <div class="relative max-w-6xl mx-auto">
      <!-- Decorative Background -->
      <div class="absolute inset-0 bg-gradient-to-r from-blue-50/30 via-purple-50/30 to-pink-50/30 rounded-3xl blur-3xl"></div>
      
      <!-- Carousel Container -->
      <div class="relative overflow-hidden rounded-2xl bg-white/80 backdrop-blur-sm border border-white/20 shadow-2xl p-8">
        <!-- Navigation Buttons -->
        <button id="prevBtn" class="absolute left-4 top-1/2 transform -translate-y-1/2 z-30 bg-white/95 hover:bg-white text-gray-800 rounded-full w-16 h-16 flex items-center justify-center shadow-xl hover:shadow-2xl transition-all duration-300 text-3xl font-bold hover:scale-110 border border-gray-200">
          ‹
        </button>
        <button id="nextBtn" class="absolute right-4 top-1/2 transform -translate-y-1/2 z-30 bg-white/95 hover:bg-white text-gray-800 rounded-full w-16 h-16 flex items-center justify-center shadow-xl hover:shadow-2xl transition-all duration-300 text-3xl font-bold hover:scale-110 border border-gray-200">
          ›
        </button>
        
        <div id="wheelContainer" class="relative w-full h-[600px] flex items-center justify-center overflow-hidden">
          <!-- Center Focus Image -->
          <div id="centerImage" class="absolute z-20 transform transition-all duration-700 ease-out">
            <div class="w-96 h-96 rounded-2xl overflow-hidden shadow-2xl cursor-pointer group" data-index="0">
              <div class="relative w-full h-full">
                <img src="/photos/IMG_8334.jpeg" alt="Key Moment 1" class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110" />
                <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                <div class="absolute bottom-4 left-4 text-white opacity-0 group-hover:opacity-100 transition-all duration-500 transform translate-y-2 group-hover:translate-y-0">
                  <h4 class="text-lg font-semibold">Strategic Meeting</h4>
                  <p class="text-sm text-gray-200">Capital Markets Insight</p>
                </div>
              </div>
            </div>
          </div>

          <!-- Left Side Images -->
          <div id="leftImage" class="absolute z-10 transform transition-all duration-700 ease-out">
            <div class="w-80 h-80 rounded-2xl overflow-hidden shadow-xl cursor-pointer group opacity-40" data-index="1">
              <div class="relative w-full h-full">
                <img src="/photos/IMG_8331.jpeg" alt="Key Moment 2" class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110" />
                <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                <div class="absolute bottom-3 left-3 text-white opacity-0 group-hover:opacity-100 transition-all duration-500 transform translate-y-2 group-hover:translate-y-0">
                  <h4 class="text-base font-semibold">Investment Forum</h4>
                  <p class="text-xs text-gray-200">Market Analysis</p>
                </div>
              </div>
            </div>
          </div>

          <!-- Right Side Images -->
          <div id="rightImage" class="absolute z-10 transform transition-all duration-700 ease-out">
            <div class="w-80 h-80 rounded-2xl overflow-hidden shadow-xl cursor-pointer group opacity-40" data-index="2">
              <div class="relative w-full h-full">
                <img src="/photos/DSCF5730.jpg" alt="Key Moment 3" class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110" />
                <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                <div class="absolute bottom-3 left-3 text-white opacity-0 group-hover:opacity-100 transition-all duration-500 transform translate-y-2 group-hover:translate-y-0">
                  <h4 class="text-base font-semibold">Executive Roundtable</h4>
                  <p class="text-xs text-gray-200">Leadership Discussion</p>
                </div>
              </div>
            </div>
          </div>

          <!-- Navigation Dots -->
          <div class="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2 z-30">
            <div id="dot0" class="w-3 h-3 bg-blue-600 rounded-full cursor-pointer transition-all duration-300"></div>
            <div id="dot1" class="w-3 h-3 bg-gray-300 rounded-full cursor-pointer transition-all duration-300"></div>
            <div id="dot2" class="w-3 h-3 bg-gray-300 rounded-full cursor-pointer transition-all duration-300"></div>
            <div id="dot3" class="w-3 h-3 bg-gray-300 rounded-full cursor-pointer transition-all duration-300"></div>
            <div id="dot4" class="w-3 h-3 bg-gray-300 rounded-full cursor-pointer transition-all duration-300"></div>
            <div id="dot5" class="w-3 h-3 bg-gray-300 rounded-full cursor-pointer transition-all duration-300"></div>
            <div id="dot6" class="w-3 h-3 bg-gray-300 rounded-full cursor-pointer transition-all duration-300"></div>
            <div id="dot7" class="w-3 h-3 bg-gray-300 rounded-full cursor-pointer transition-all duration-300"></div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Enhanced Modal -->
  <div id="imageModal" class="fixed inset-0 bg-black/95 backdrop-blur-sm z-50 hidden flex items-center justify-center p-4">
    <div class="relative w-full h-full flex items-center justify-center">
      <!-- Close Button -->
      <button id="closeModalBtn" class="absolute top-4 right-4 text-white text-5xl hover:text-gray-300 z-20 transition-all duration-300 hover:scale-110 bg-black/50 rounded-full w-12 h-12 flex items-center justify-center backdrop-blur-sm">
        &times;
      </button>
      
      <!-- Navigation Buttons -->
      <button id="modalPrevBtn" class="absolute left-4 top-1/2 transform -translate-y-1/2 text-white text-4xl hover:text-gray-300 z-20 bg-black/60 hover:bg-black/80 rounded-full w-16 h-16 flex items-center justify-center backdrop-blur-sm transition-all duration-300 hover:scale-110">
        ‹
      </button>
      <button id="modalNextBtn" class="absolute right-4 top-1/2 transform -translate-y-1/2 text-white text-4xl hover:text-gray-300 z-20 bg-black/60 hover:bg-black/80 rounded-full w-16 h-16 flex items-center justify-center backdrop-blur-sm transition-all duration-300 hover:scale-110">
        ›
      </button>
      
      <!-- Image Container -->
      <div class="relative w-full h-full flex items-center justify-center p-8">
        <img id="modalImage" src="" alt="Modal Image" class="max-w-full max-h-full object-contain rounded-lg shadow-2xl" />
      </div>
      
      <!-- Image Counter -->
      <div class="absolute bottom-4 left-1/2 transform -translate-x-1/2 text-white text-lg font-medium bg-black/50 px-4 py-2 rounded-full backdrop-blur-sm">
        <span id="imageCounter">1</span> / <span id="totalImages">8</span>
      </div>
    </div>
  </div>

  <script>
    const images = [
      { src: '/photos/IMG_8334.jpeg', title: 'Strategic Meeting', subtitle: 'Capital Markets Insight' },
      { src: '/photos/IMG_8331.jpeg', title: 'Investment Forum', subtitle: 'Market Analysis' },
      { src: '/photos/DSCF5730.jpg', title: 'Executive Roundtable', subtitle: 'Leadership Discussion' },
      { src: '/photos/DSCF5543.jpg', title: 'Industry Summit', subtitle: 'Global Perspectives' },
      { src: '/photos/Fireside chat with Enrico Giovannini.jpg', title: 'Fireside Chat', subtitle: 'Enrico Giovannini' },
      { src: '/photos/Fireside Chat_Conor.jpg', title: 'Fireside Chat', subtitle: 'Conor' },
      { src: '/photos/Family offices approaches towards alternative assets.jpg', title: 'Family Offices', subtitle: 'Alternative Assets' },
      { src: '/photos/Sustainability Case Studies-Ion Influencers Event.jpg', title: 'Sustainability Event', subtitle: 'Case Studies' }
    ];
    
    let currentIndex = 0;
    let modalCurrentIndex = 0;
    let autoRotateInterval: ReturnType<typeof setInterval> | undefined;
    let isAutoRotating = true;
    let touchStartX = 0;
    let touchStartY = 0;

    function updateWheel() {
      const centerImage = document.getElementById('centerImage');
      const leftImage = document.getElementById('leftImage');
      const rightImage = document.getElementById('rightImage');
      
      if (centerImage && leftImage && rightImage) {
        // Update center image
        const centerImg = centerImage.querySelector('img');
        const centerTitle = centerImage.querySelector('h4');
        const centerSubtitle = centerImage.querySelector('p');
        
                 if (centerImg) centerImg.src = images[currentIndex].src;
         if (centerTitle) centerTitle.textContent = images[currentIndex].title;
         if (centerSubtitle) centerSubtitle.textContent = images[currentIndex].subtitle;
         const centerDiv = centerImage.querySelector('div');
         if (centerDiv) centerDiv.setAttribute('data-index', currentIndex.toString());
        
        // Update left image
        const leftIndex = (currentIndex - 1 + images.length) % images.length;
        const leftImg = leftImage.querySelector('img');
        const leftTitle = leftImage.querySelector('h4');
        const leftSubtitle = leftImage.querySelector('p');
        
                 if (leftImg) leftImg.src = images[leftIndex].src;
         if (leftTitle) leftTitle.textContent = images[leftIndex].title;
         if (leftSubtitle) leftSubtitle.textContent = images[leftIndex].subtitle;
         const leftDiv = leftImage.querySelector('div');
         if (leftDiv) leftDiv.setAttribute('data-index', leftIndex.toString());
        
        // Update right image
        const rightIndex = (currentIndex + 1) % images.length;
        const rightImg = rightImage.querySelector('img');
        const rightTitle = rightImage.querySelector('h4');
        const rightSubtitle = rightImage.querySelector('p');
        
                 if (rightImg) rightImg.src = images[rightIndex].src;
         if (rightTitle) rightTitle.textContent = images[rightIndex].title;
         if (rightSubtitle) rightSubtitle.textContent = images[rightIndex].subtitle;
         const rightDiv = rightImage.querySelector('div');
         if (rightDiv) rightDiv.setAttribute('data-index', rightIndex.toString());
        
        // Update dots
        updateDots();
      }
    }

    function updateDots() {
      for (let i = 0; i < images.length; i++) {
        const dot = document.getElementById(`dot${i}`);
        if (dot) {
          if (i === currentIndex) {
            dot.classList.remove('bg-gray-300');
            dot.classList.add('bg-blue-600');
          } else {
            dot.classList.remove('bg-blue-600');
            dot.classList.add('bg-gray-300');
          }
        }
      }
    }

    function nextImage() {
      const nextIndex = (currentIndex + 1) % images.length;
      currentIndex = nextIndex;
      updateWheel();
      
      // Add smooth transition effect when reaching the end
      if (nextIndex === 0) {
        const wheelContainer = document.getElementById('wheelContainer');
        if (wheelContainer) {
          wheelContainer.style.transition = 'all 1s ease-in-out';
          setTimeout(() => {
            if (wheelContainer) {
              wheelContainer.style.transition = 'all 0.7s ease-out';
            }
          }, 1000);
        }
      }
    }

    function prevImage() {
      const prevIndex = (currentIndex - 1 + images.length) % images.length;
      currentIndex = prevIndex;
      updateWheel();
      
      // Add smooth transition effect when reaching the beginning
      if (prevIndex === images.length - 1) {
        const wheelContainer = document.getElementById('wheelContainer');
        if (wheelContainer) {
          wheelContainer.style.transition = 'all 1s ease-in-out';
          setTimeout(() => {
            if (wheelContainer) {
              wheelContainer.style.transition = 'all 0.7s ease-out';
            }
          }, 1000);
        }
      }
    }

    function openModal(index: number) {
      modalCurrentIndex = index;
      const modalImage = document.getElementById('modalImage') as HTMLImageElement;
      const imageModal = document.getElementById('imageModal');
      const imageCounter = document.getElementById('imageCounter');
      
      if (modalImage && imageModal) {
        modalImage.src = images[index].src;
        imageModal.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
        
        if (imageCounter) {
          imageCounter.textContent = (index + 1).toString();
        }
      }
    }

    function closeModal() {
      const imageModal = document.getElementById('imageModal');
      if (imageModal) {
        imageModal.classList.add('hidden');
        document.body.style.overflow = 'auto';
      }
    }

    function modalNextImage() {
      modalCurrentIndex = (modalCurrentIndex + 1) % images.length;
      const modalImage = document.getElementById('modalImage') as HTMLImageElement;
      const imageCounter = document.getElementById('imageCounter');
      
      if (modalImage) {
        modalImage.src = images[modalCurrentIndex].src;
      }
      
      if (imageCounter) {
        imageCounter.textContent = (modalCurrentIndex + 1).toString();
      }
    }

    function modalPrevImage() {
      modalCurrentIndex = (modalCurrentIndex - 1 + images.length) % images.length;
      const modalImage = document.getElementById('modalImage') as HTMLImageElement;
      const imageCounter = document.getElementById('imageCounter');
      
      if (modalImage) {
        modalImage.src = images[modalCurrentIndex].src;
      }
      
      if (imageCounter) {
        imageCounter.textContent = (modalCurrentIndex + 1).toString();
      }
    }

    function startAutoRotate() {
      if (isAutoRotating) {
        autoRotateInterval = setInterval(() => {
          nextImage();
        }, 3000);
      }
    }

    function stopAutoRotate() {
      if (autoRotateInterval) {
        clearInterval(autoRotateInterval);
      }
    }

    // Initialize wheel
    document.addEventListener('DOMContentLoaded', function() {
      // Set initial positions
      const centerImage = document.getElementById('centerImage');
      const leftImage = document.getElementById('leftImage');
      const rightImage = document.getElementById('rightImage');
      
             if (centerImage && leftImage && rightImage) {
         leftImage.style.transform = 'translateX(-280px) translateY(30px) scale(0.7)';
         rightImage.style.transform = 'translateX(280px) translateY(30px) scale(0.7)';
       }

      // Add click handlers
      const centerDiv = document.getElementById('centerImage')?.querySelector('div');
      const leftDiv = document.getElementById('leftImage')?.querySelector('div');
      const rightDiv = document.getElementById('rightImage')?.querySelector('div');
      
      if (centerDiv) {
        centerDiv.addEventListener('click', () => {
          const index = parseInt(centerDiv.getAttribute('data-index') || '0');
          openModal(index);
        });
      }
      
      if (leftDiv) {
        leftDiv.addEventListener('click', () => {
          const index = parseInt(leftDiv.getAttribute('data-index') || '0');
          openModal(index);
        });
      }
      
      if (rightDiv) {
        rightDiv.addEventListener('click', () => {
          const index = parseInt(rightDiv.getAttribute('data-index') || '0');
          openModal(index);
        });
      }

      // Add dot click handlers
      for (let i = 0; i < images.length; i++) {
        const dot = document.getElementById(`dot${i}`);
        if (dot) {
          dot.addEventListener('click', () => {
            currentIndex = i;
            updateWheel();
            stopAutoRotate();
            startAutoRotate();
          });
        }
      }

             // Navigation button handlers
       const prevBtn = document.getElementById('prevBtn');
       const nextBtn = document.getElementById('nextBtn');
       
       if (prevBtn) {
         prevBtn.addEventListener('click', () => {
           prevImage();
           stopAutoRotate();
           startAutoRotate();
         });
       }
       
       if (nextBtn) {
         nextBtn.addEventListener('click', () => {
           nextImage();
           stopAutoRotate();
           startAutoRotate();
         });
       }

       // Touch and mouse events for wheel rotation
       const wheelContainer = document.getElementById('wheelContainer');
       if (wheelContainer) {
         // Mouse events
         wheelContainer.addEventListener('mousedown', (e) => {
           touchStartX = e.clientX;
           touchStartY = e.clientY;
           stopAutoRotate();
         });

         wheelContainer.addEventListener('mouseup', (e) => {
           const deltaX = e.clientX - touchStartX;
           const deltaY = Math.abs(e.clientY - touchStartY);
           
           if (Math.abs(deltaX) > 50 && deltaY < 100) {
             if (deltaX > 0) {
               prevImage();
             } else {
               nextImage();
             }
           }
           startAutoRotate();
         });

         // Touch events
         wheelContainer.addEventListener('touchstart', (e) => {
           touchStartX = e.touches[0].clientX;
           touchStartY = e.touches[0].clientY;
           stopAutoRotate();
         });

         wheelContainer.addEventListener('touchend', (e) => {
           const deltaX = e.changedTouches[0].clientX - touchStartX;
           const deltaY = Math.abs(e.changedTouches[0].clientY - touchStartY);
           
           if (Math.abs(deltaX) > 50 && deltaY < 100) {
             if (deltaX > 0) {
               prevImage();
             } else {
               nextImage();
             }
           }
           startAutoRotate();
         });
       }

      // Modal navigation handlers
      const closeModalBtn = document.getElementById('closeModalBtn');
      const modalPrevBtn = document.getElementById('modalPrevBtn');
      const modalNextBtn = document.getElementById('modalNextBtn');
      
      if (closeModalBtn) {
        closeModalBtn.addEventListener('click', closeModal);
      }
      
      if (modalPrevBtn) {
        modalPrevBtn.addEventListener('click', modalPrevImage);
      }
      
      if (modalNextBtn) {
        modalNextBtn.addEventListener('click', modalNextImage);
      }

      // Keyboard navigation
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
          closeModal();
        }
        
        // Only handle arrow keys when modal is open
        const imageModal = document.getElementById('imageModal');
        if (imageModal && !imageModal.classList.contains('hidden')) {
          if (e.key === 'ArrowLeft') {
            e.preventDefault();
            modalPrevImage();
          } else if (e.key === 'ArrowRight') {
            e.preventDefault();
            modalNextImage();
          }
        }
      });

      // Close modal on click outside
      const imageModal = document.getElementById('imageModal');
      if (imageModal) {
        imageModal.addEventListener('click', function(e) {
          if (e.target === this) {
            closeModal();
          }
        });
      }

      // Start auto-rotation
      startAutoRotate();
    });
  </script>
</section> 